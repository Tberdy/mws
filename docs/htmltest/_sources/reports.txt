############
Reports
############

.. function:: get_report(self, report_id)

    Call to get reports

    :param string report_id: ID of the report to be called received from


.. function:: get_report_count(self, report_types=(), acknowledged=None, fromdate=None, todate=None)

    Give the count of the reports

    :param report_types: Receives a tuple with report types
    :type report_types: list or tuple
    :param string acknowledged: Send a message back to the server
    :param datetime fromdate:
    :param datetime todate:
    :returns: something from amazon


.. function:: get_report_list(self, requestids=(), max_count=None, types=(), acknowledged=None, fromdate=None, todate=None)

    Get the report lists

    :param requestids: Provide the requested ID
    :type requestids: list or tuple
    :param string max_count: Max number of answers
    :param types: Provide the requested ID
    :type types: list or tuple
    :param string acknowledged:
    :param datetime fromdate:
    :param datetime todate:
    :returns: something from amazon


.. function:: get_report_list_by_next_token(self, token)

    Get the report by token

    :param string token: token id of requested page
    :returns: something from amazon


.. function:: get_report_request_count(self, report_types=(), processingstatuses=(), fromdate=None, todate=None)

    Get the report request count

    :param report_types: Provide the report type
    :type report_types: list or tuple
    :param processingstatuses: Provide the requested ID
    :type processingstatuses: list or tuple
    :param datetime fromdate:
    :param datetime todate:
    :returns: something from amazon


.. function:: get_report_request_list(self, requestids=(), types=(), processingstatuses=(), max_count=None, fromdate=None, todate=None)

    Get the report request count

    :param requestids: Provide the requested ID
    :type requestids: list or tuple
    :param types: Provide the requested ID
    :type types: list or tuple    
    :param processingstatuses: Provide the requested ID
    :type processingstatuses: list or tuple
    :param string max_count: Max number of answers
    :param datetime fromdate:
    :param datetime todate:
    :returns: something from amazon


.. function:: get_report_request_list_by_next_token(self, token)

    Get the report by token

    :param string token: token id of requested page
    :returns: something from amazon


.. function:: request_report(self, report_type, start_date=None, end_date=None, marketplaceids=())

    Give the request reports

    :param string report_type: Receives specific valid values -link here-
    :param datetime start_date:
    :param datetime end_date:
    :returns: something from amazon
    :param marketplaceids: Define the specific Marketplace ID
    :type marketplaceids: list or tuple
    :returns: something from amazon

    
---------------
ReportSchedule
---------------


.. function:: get_report_schedule_list(self, types=())

    Get the report schedule

    :param types: Provide the requested ID
    :type types: list or tuple


.. function:: get_report_schedule_count(self, types=())

    Get the report schedule count

    :param types: Provide the requested ID
    :type types: list or tuple


